{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/board/board.component.ts","webpack:///src/app/board/board.component.html","webpack:///src/app/square/square.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","register","enabled","production","declarations","providers","bootstrap","BoardComponent","newGame","squares","Array","fill","winner","xIsNext","idx","splice","player","lines","i","length","a","b","c","SquareComponent","template","styles","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myapp';\n}\n","<app-board ></app-board>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SquareComponent } from './square/square.component';\nimport { BoardComponent } from './board/board.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SquareComponent,\n    BoardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n  squares: any[];\n  xIsNext: boolean;\n  winner: string;\n  constructor() { }\n\n  ngOnInit() {\n    this.newGame();\n  }\n  newGame() {\n    this.squares = Array(9).fill(null);\n    this.winner = null;\n    this.xIsNext = true;\n  }\n  get player(){\n    return this.xIsNext ? 'X' : 'O';\n  }\n\n  makeMove(idx: number){\n    if(!this.squares[idx]){\n      this.squares.splice(idx, 1, this.player);\n      this.xIsNext = !this.xIsNext;\n    }\n  }\n\ncalculateWinner(){\n  const lines = [\n    [0,1,2],\n    [3,4,5],\n    [6,7,8],\n    [0,3,6],\n    [1,4,7],\n    [2,5,8],\n    [0,4,8],\n    [2,4,6]\n  ];\n  for(let i = 0; i < lines.length; i++){\n    const[a,b,c] = lines[i];\n    if(\n    this.squares[a] &&\n    this.squares[a] === this.squares[b]&&\n    this.squares[a] === this.squares[c]\n    ){\n      return this.squares[a];\n    }\n    }\n    return null;\n}\n\n\n}\n\n\n","<h1> Current Player: {{ player }} </h1>\n<button (click)=\"newGame()\"> Start New Game </button>\n<h2 *ngIf=\"winner\">\n    Player {{ winner }} won the game!\n</h2>\n\n<main>\n    <app-square \n        *ngFor=\"let val of squares; let i = index\"\n        [value]=\"val\"\n        (click)=\"makeMove(i)\">\n\n    </app-square>\n</main>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-square',\n  template: `\n  <button style=\"width:100%;height:100%;font-size:42pt\">{{ value }}</button>\n  `,\n  styles: [\n  ]\n})\nexport class SquareComponent  {\n\n  @Input() value: 'X' | 'O'\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}